<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Github博客搭建</title>
      <link href="/posts/9495.html"/>
      <url>/posts/9495.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Github博客搭建教程"><a href="#Hexo-Github博客搭建教程" class="headerlink" title="Hexo+Github博客搭建教程"></a>Hexo+Github博客搭建教程</h1><p>这是我的第一篇博客，因为是在实习嘛，老师就让我来做一个个人博客练手，也是查了好多人的博客。所以第一篇博客就写一个关于搭建个人博客的博客吧（绕口令）。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么要使用这个搭建博客呢？因为他是免费的呀。而且不用买服务器，还能定制自己喜欢的个性主题。 本篇博客主要注重 这个搭建，关于美化呢我会放在下一篇博客。</p><p>本博客基于Hexo，所以首先要了解一下我们搭建博客所要用到的框架。Hexo是高效的静态网站生成框架，它基于Node.js，快速，简单且功能强大，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。通过Hexo，你可以直接使用Markdown语法来撰写博客。相信很多小伙伴写工程都写过README.md文件吧，对，就是这个格式的！写完后只需两三条命令即可将生成的网页上传到github或者coding等代码管理托管平台，然后别人就可以浏览你的博客网页啦。是不是很简单？你无需关心网页源代码的具体生成细节，只需要用心写好你的博客文章内容就行了。</p><h2 id="hexo搭建过程"><a href="#hexo搭建过程" class="headerlink" title="hexo搭建过程"></a>hexo搭建过程</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>github创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到github</li><li>发布文章</li></ol><p>##1.安装Git</p><p>Git作用：可以把本地的网页文件上传到github上面。Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到很大的项目版本管理。安装完成后右击就可以使用 git bash来敲命令了，不用自带的cmd</p><p>Git下载：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h2><p>Hexo 是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。</p><p>node.js下载：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p><p>安装好后，可以通过 win+R 打开命令提示符，输入</p><pre class="line-numbers language-none"><code class="language-none">node -vnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果出现版本号，那么就安装成功了。</p><p>添加国内镜像源：</p><pre class="line-numbers language-none"><code class="language-none">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>你可以先创建一个文件夹myblog，用来存放自己的博客文件，在这个文件夹中右击打开git bash ,输入：</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装hexo完后输入hexo -v 验证是否安装成功</p><p>至此hexo就安装完了。</p><p>接下来初始化一下hexo,在你的文件夹中 输入</p><pre class="line-numbers language-none"><code class="language-none">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化文件夹。</p><p>接下来输入</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装必备的组件。</p><p>新建完成后，指定文件夹目录下有：</p><ul><li><code>node_modules:</code> 依赖包</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code>主题</li><li><code>_config.yml:</code> 博客的配置文件</li></ul><p>这样本地的网站配置也弄好了，输入 </p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成静态网页，然后输入</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开本地服务器按ctrl+c关闭本地服务器。</p><h2 id="4-注册Github账号创建个人仓库"><a href="#4-注册Github账号创建个人仓库" class="headerlink" title="4.注册Github账号创建个人仓库"></a>4.注册Github账号创建个人仓库</h2><p>这里需要你去注册一个github账号，用来存放我们的网站</p><p>打开https&#x2F;&#x2F;github.com 新建一个项目仓库New repository</p><p>注意：需要你创建一个和你用户名一样的仓库</p><p>例如我的：http&#x2F;&#x2F;wzl0512.github.io</p><p>你的仓库名就应该是wzl0512.github.io</p><h2 id="5-生成SSH添加到Github中"><a href="#5-生成SSH添加到Github中" class="headerlink" title="5.生成SSH添加到Github中"></a>5.生成SSH添加到Github中</h2><p>在你文件夹中右键打开 git bash，然后输入以下命令：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里的yourname是输入你的GitHub用户名，youremail输入你的Github的邮箱。列如我的：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;wzl0512&quot;git config --global user.email &quot;2392835548@qq.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以用以下俩条，检查一下你有没有输对</p><pre class="line-numbers language-none"><code class="language-none">git config user.namegit config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后创建SSH输入：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一路回车（ssh就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。）</p><p>这个时候他就会告诉你你已经生成了.ssh的文件夹。在git bash 中输入</p><pre class="line-numbers language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的的内容复制到框中，点击确定保存。打开github,在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。</p><p>在<code>git bash</code>输入<code>ssh -T git@github.com</code>出现你的用户名，那就成功了</p><h2 id="6-将hexo部署到Github"><a href="#6-将hexo部署到Github" class="headerlink" title="6.将hexo部署到Github"></a>6.将hexo部署到Github</h2><p>这一步，我们就可以将<code>hexo</code>和<code>GitHub</code>关联起来，也就是将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>修改最后一行的配置：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">deploy:  type: git  repository:   https://github.com/wzl0512/wzl0512.github.io.git  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code></p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后：</p><pre class="line-numbers language-none"><code class="language-none">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p><p>直接通过认证即可（需要你搭梯子，不然可能访问不了或者很慢）</p></blockquote><p>得到下图就说明部署成功了，过一会儿就可以在<a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了！！</p><p><img src="https://wzl-1314804277.cos.ap-shanghai.myqcloud.com/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%AC%AC%E4%B8%80%E7%AF%87hexo%2Bgithub%E5%8D%9A%E5%AE%A2/wzl%27sBlog.png"></p><h2 id="7-发布文章"><a href="#7-发布文章" class="headerlink" title="7.发布文章"></a>7.发布文章</h2><p>首先在博客根目录下右键打开git bash，安装一个扩展</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入</p><pre class="line-numbers language-none"><code class="language-none">hexo new post &quot;我的第一篇博客&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一篇文章。</p><p>然后打开source&#x2F;_posts的目录，可以发现下面多了一个.md文件，这个就是你的文章文件啦。 </p><p>编写完markdown文件后，根目录下输入<em><strong>hexo g</strong></em>生成静态网页</p><p>然后输入<em><strong>hexo s</strong></em>可以本地预览效果</p><p>最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p><p>到这儿基本第一部分就完成了，已经完整搭建起一个比较简陋的个人博客了，接下来我们就可以对我们的博客进行个性化定制了。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
